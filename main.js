!function(){"use strict";var e=class{constructor(e,t,s){let{name:n,link:i}=e;this._name=n,this._link=i,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardImageEl.addEventListener("click",(()=>this._handleImageClick(this._name,this._link))),this._cardLikeButton.addEventListener("click",(()=>this._handleLikeIcon())),this._cardDeleteButton.addEventListener("click",(()=>this._handleDeleteCard()))}_handleLikeIcon(){this._cardLikeButton.classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getElement(),this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._cardElement}},t=class{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}toggleButtonState(e){this._hasInvalidInput()?this._disableButton(this._submitButton,this._inactiveButtonClass):this._enableButton(this._submitButton,this._inactiveButtonClass)}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this.toggleButtonState()}},s=class{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target.classList.contains("modal__close")||e.target.classList.contains("modal_opened"))&&this.close()}))}},n=class extends s{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._inputs=this._popupForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e={};return this._inputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}};const i=document.querySelector("#profile-edit-button"),r=document.querySelector("#profile-edit-modal"),o=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),a=document.querySelector("#profile-description-input"),l=(document.querySelector(".cards__list"),document.querySelector("#profile-add-button")),c=document.querySelector("#add-card-modal"),u={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"},d=r.querySelector(".modal__form"),_=c.querySelector(".modal__form"),m=new t(u,d),h=new t(u,_);m.enableValidation(),h.enableValidation();const p=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach(this._renderer)}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:f},".cards__list");p.renderItems();const E=new n("#add-card-modal",(e=>{var t,s;t=e.title,s=e.url,f({name:t,link:s}),E.close()}));E.setEventListeners(),l.addEventListener("click",(()=>{h.resetValidation(),E.open(c)}));const v=new class{constructor(e,t){this._titleElement=document.querySelector(e),this._descriptionElement=document.querySelector(t)}getUserInfo(){return{title:this._titleElement.textContent,description:this._descriptionElement.textContent}}setUserInfo(e,t){this._titleElement.textContent=e,this._descriptionElement.textContent=t}}(".profile__title",".profile__description"),S=new n("#profile-edit-modal",(function(e){v.setUserInfo(e.title,e.description),S.close()}));S.setEventListeners(),i.addEventListener("click",(()=>{m.resetValidation();const{title:e,description:t}=v.getUserInfo();o.value=e,a.value=t,S.open()}));const g=new class extends s{constructor(e){super({popupSelector:e}),this._previewImage=this._popupElement.querySelector("#preview-image"),this._previewName=document.querySelector("#preview-name")}open(e,t){this._previewImage.src=e,this._previewImage.alt=t,this._previewName.textContent=t,super.open()}}("#preview-image-modal");function f(t){const s=function(t){return new e(t,"#card-template",(()=>{g.open(t.link,t.name)})).getView()}(t);p.addItem(s)}g.setEventListeners(),fetch("https://around-api.en.tripleten-services.com/v1",{headers:{authorization:"c56e30dc-2883-4270-a59e-b2f7bae969c6"}}).then((e=>e.json())).then((e=>{console.log(e)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,